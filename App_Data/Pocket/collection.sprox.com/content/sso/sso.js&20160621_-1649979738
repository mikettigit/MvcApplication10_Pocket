var cookieFrames = {};
var intervals = {};
var framesLoaded = {};
var urls = (typeof sharedCartUrls != "undefined")? sharedCartUrls: [];
var password = localStorage.getItem("password");
var site_codeInternal = (localStorage.getItem("site_code") != null)? localStorage.getItem("site_code") : saveSiteCode();

function saveSiteCode() {
    localStorage.setItem("site_code", site_code);
    site_codeInternal = site_code;
}

var eventMethod = window.addEventListener ? "addEventListener" : "attachEvent";
var eventer = window[eventMethod];
var messageEvent = eventMethod == "attachEvent" ? "onmessage" : "message";

// Listen to message from child frame
eventer(messageEvent,function(e) {
    var key = e.message ? "message" : "data";
    var data = e[key];
    var splittedData = data.split("||");

    if (splittedData.length == 6 && originInSharedCartUrls(e.origin, JSON.parse(splittedData[5]))) {
        console.log("Post message received from : " + e.origin);

        var cartCookie = JSON.parse(getCartCookie(window.document));
        if (cartCookie == null) {
            cartCookie = {};
        }
        var cartId = splittedData[0];
        var userName = splittedData[1];
        var email = splittedData[2];
        var password = splittedData[3];
        var siteCode = splittedData[4];
        site_code = siteCode;
        saveSiteCode();

        console.log("CartId : " + cartId);
        console.log("userName : " + userName);
        console.log("Email : " + email);
        if (userName != undefined && userName != null && userName != "") {
            cartCookie[userName] = parseInt(cartId);
            console.log("Setting cart cookie on : " + window.location.host);
            setCartCookie(JSON.stringify(cartCookie), 7, "/");
        }

        console.log("Logging in now ...");
        var userObject = {};
        if (email != "undefined" && email != "") {
            login(email, password, siteCode);
            userObject = {user: email, password: password};
            ModuleInjector.setUser(userObject);
        } else {
            login(userName, password, siteCode);
            userObject = {user: userName, password: password};
            ModuleInjector.setUser(userObject);
        }
    } else if (splittedData.length == 3 && splittedData[0] == "cart") {
        console.log("Post message received from : " + e.origin);
        console.log("Cart received in : " + window.location.host);
        window.localStorage.setItem("cart", decodeURI(splittedData[1]));
    } else if (splittedData.length == 3 && splittedData[0] == "settings") {
        console.log("Post message received from : " + e.origin);
        console.log("Settings received in : " + window.location.host);
        window.localStorage.setItem(splittedData[2] + "_new_offer_settings", decodeURI(splittedData[1]));
    }
},false);

function distributeCartAndSettings(cart, settings, username) {
    console.log("Distributing the cart and settings");
    var currentHost = window.location.host;

    for (var i = 0; i < urls.length; i++) {
        var url = urls[i].url;
        if (url.indexOf(currentHost) == -1) {
            console.log("   to : " + url);
            var id = url + "someIdThatCanNeverBeFoundBecauseItIsRemovedAfterwards";
            var element = document.getElementById(id);
            if (element == null) {
                var element = document.createElement('iframe');
                element.id = id;
                element.src = url + "content/sso/sharedcart.html";
                element.height = "0px";
                element.width = "0px";
                element.onload = function () {
                    this.loaded = true;
                };
            }
            window.document.body.appendChild(element);

            setIntervalWrapper(element, 'cart', cart, username);
            setIntervalWrapper(element, 'settings', settings, username);
        }
    }
}

function setIntervalWrapper(frame, prefix, data, username) {
    var interval = setInterval(function() {
        if (frame.loaded && frame.contentWindow) {
            console.log("Posting " + prefix + " : ", data);
            frame.contentWindow.postMessage(prefix + "||" + encodeURI(JSON.stringify(data)) + "||" + username, "*");
            clearInterval(interval);
        }
    }, 100);
}

//function setHeartBeatCalls(count) {
//    if (window.location.search.indexOf("noheartbeattrigger") == -1) {
//        console.log("Loading frames so the heartbeat can be called on the logged in urls");
//        var currentHost = window.location.host;
//
//        if (count < urls.length) {
//            var url = urls[count].url;
//
//            if (url.indexOf(currentHost) == -1) {
//                var interval = setInterval(function() {
//                    if (window.document.body) {
//                        var id = "someIdThatCanNeverBeFoundBecauseItIsToLongToGuess" + i;
//                        var element = document.getElementById(id);
//                        if (element != 'true') {
//                            console.log("   for host : " + url);
//                            console.log("   Appending the frame to the body");
//                            url.isAdded = true;
//
//                            var frame = document.createElement('iframe');
//                            frame.id = id;
//                            frame.src = url + "?noheartbeattrigger=1";
//                            frame.height = "0px";
//                            frame.width = "0px";
//                            frame.onload = function() {
//                                setHeartBeatCalls(++count);
//                            };
//                            window.document.body.appendChild(frame);
//
//                            clearInterval(interval);
//                        }
//                    }
//                }, 100);
//            } else {
//                setHeartBeatCalls(++count);
//            }
//        }
//    }
//}

//function setCartCookieAndLogin(iFrameId, userName, email, url, i) {
//    if (cookieFrames[iFrameId] == undefined || cookieFrames[iFrameId] == null) {
//        console.log("Creating CORS iFrame for userName : " + userName);
//        cookieFrames[iFrameId] = document.createElement('iframe');
//        cookieFrames[iFrameId].id = iFrameId;
//        cookieFrames[iFrameId].onload = function () {
//            console.log("Setting the iframe " + iFrameId + " to loaded");
//            framesLoaded[iFrameId] = true;
//        };
//        cookieFrames[iFrameId].src = url + "content/sso/sharedcart.html";
//        cookieFrames[iFrameId].height = "0px";
//        cookieFrames[iFrameId].width = "0px";
//        document.getElementById("ssoDiv").appendChild(cookieFrames[iFrameId]);
//
//        console.log("The frame ['" + iFrameId + "'] is loading ...");
//
//        intervals[iFrameId] = setInterval(function () {
//            if (framesLoaded[iFrameId]) {
//                var siteCode = urls[i].siteCode;
//
//                console.log("The page is loaded");
//                console.log("Sending the cookie to other domain");
//                var cartCookie = JSON.parse(getCartCookie(window.document));
//                cookieFrames[iFrameId].contentWindow.postMessage(
//                    cartCookie[userName] + "||" +
//                    userName + "||" +
//                    email + "||" +
//                    password + "||" +
//                    siteCode + "||" +
//                    JSON.stringify(urls), "*");
//                cookieFrames[iFrameId].src = url;
//
//                clearInterval(intervals[iFrameId]);
//            }
//        }, 100);
//    }
//}
//
function originInSharedCartUrls(url, urlsToCheck) {
    if (urlsToCheck == undefined) {
        return false;
    } else {
        console.log("The urls to check :");
        console.log(urlsToCheck);
    }

    for (var i = 0; i < urlsToCheck.length; i++) {
        var sharedCookieUrl = urlsToCheck[i].url;

        if (sharedCookieUrl.indexOf(url) != -1) {
            console.log("Ready to handle the message : " + url);
            return true;
        }
    }

    return false;
}

function getCartCookie(windowDocument) {
    var name = "cartIds=";
    var ca = windowDocument.cookie.split(';');
    for(var i=0; i<ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1);
        if (c.indexOf(name) == 0) {
            var result = c.substring(name.length,c.length);
            if (result == "") {
                result = "{}";
            } else {
                result = decodeURIComponent(result);
            }
            return result;
        }
    }
    return "{}";
}

function setCartCookie(cvalue, exdays, path) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    var expires = "expires="+d.toUTCString();
    document.cookie = "cartIds=" + cvalue + "; " + expires + ";path=" + path;
}

//function getUser() {
//    return {
//        then: function(callback) {
//            console.log("Creating the promise for the serverVariables");
//            var interval = setInterval(function() {
//                if (typeof site_codeInternal !== undefined) {
//                    clearInterval(interval);
//                    var data = getServerVariables('/action/' + site_codeInternal + '/en/serverVariables');
//                    eval(data);
//
//                    if (typeof user.username !== undefined) {
//                        if (user.type == "A") {
//                            console.log("returning username : " + user.username);
//                            callback(user.username);
//                        } else {
//                            console.log("returning username : " + user.email);
//                            callback(user.username, user.email);
//                        }
//                    }
//                }
//            }, 500);
//        }
//    }
//}

function savePasswordAndUserForSSO() {
    password = document.getElementsByName("j_password")[0].value;
    var user = document.getElementsByName("j_username")[0].value;
    console.log("Setting password in localStorage until all sites are logged in.");
    localStorage.setItem("password", password);

    var userObject = {user: user, password: password};
    ModuleInjector.setUser(userObject);
}

// AJAX Calls
//function getServerVariables(url) {
//    console.log("Getting the serverVariables");
//
//    var AJAX;
//    if (window.XMLHttpRequest) {
//        AJAX = new XMLHttpRequest();
//    } else {
//        AJAX = new ActiveXObject("Microsoft.XMLHTTP");
//    }
//    if (AJAX) {
//        AJAX.open("GET", url, false);
//        AJAX.send(null);
//        return AJAX.responseText;
//    } else {
//        return false;
//    }
//}

//function login(userName, password, site_codeInternal) {
//    console.log("Logging in on the other server with credentials : " + userName + " - " + password);
//
//    var AJAX;
//    if (window.XMLHttpRequest) {
//        AJAX = new XMLHttpRequest();
//    } else {
//        AJAX = new ActiveXObject("Microsoft.XMLHTTP");
//    }
//    if (AJAX) {
//        AJAX.open("POST", "/action/j_spring_security_check", true);
//
//        AJAX.setRequestHeader("UserHeader", userName);
//        AJAX.setRequestHeader("SiteCode", site_codeInternal);
//        AJAX.setRequestHeader("Content-type","application/x-www-form-urlencoded");
//        AJAX.send("j_username=" + userName + "&j_password=" + password + "&language=en" + "&site_name=" + site_codeInternal);
//
//        console.log(AJAX.getResponseHeader('Set-Cookie'));
//
//        console.log("We are logged in !!");
//    } else {
//        console.log("We are NOT logged in !!");
//    }
//}