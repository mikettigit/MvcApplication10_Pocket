rdsApp.config(function ($routeProvider, $locationProvider) {
	$routeProvider
		.when('', {
			templateUrl: '/content/myzone/offers.html',
			controller: 'MyZoneController',
			controllerAs: 'myZoneCtrl'
		})
		.when('/offers', {
			templateUrl: '/content/myzone/offers.html',
			controller: 'MyZoneController',
			controllerAs: 'myZoneCtrl'
		})
		.when('/favourites', {
			templateUrl: '/content/myzone/favourites.html',
			controller: 'FavouritesController'
		})
		.when('/invoices', {
			templateUrl: '/content/myzone/invoices.html',
			controller: 'MyZoneController',
			controllerAs: 'myZoneCtrl'
		})
		.when('/profile', {
			templateUrl: '/content/myzone/profile.html',
			controller: 'ProfileController',
			controllerAs: 'profileController'
		})
		.when('/tracking', {
			templateUrl: '/content/myzone/trackingstatus.html',
			controller: 'TrackingController'
		})
		.when('/userflow', {
			templateUrl: '/content/myzone/userflow.html',
			controller: 'UserFlowController'
		})
		.when('/mailoverview', {
			templateUrl: '/content/myzone/mailoverview.html',
			controller: 'UserFlowController'
		})
		.when('/ordertracking', {
			templateUrl: '/content/myzone/ordertracking.html',
			controller: 'TrackingController'
		});
});

rdsApp.controller('MyZoneController', function () {
});

rdsApp.controller('TrackingController', ['$scope', '$http', 'articleService', '$log', '$location', 'settingsService', '$timeout', function ($scope, $http, articleService, $log, $location, settingsService, $timeout) {
	$scope.trackSearchCriteria = {};
	$scope.trackSearchCriteria.customerId = undefined;
	$scope.trackSearchCriteria.article = undefined;
	$scope.trackingItems = [];
	$scope.searchSubmitted = false;

	$scope.findTrackItems = function () {
		if ($scope.trackSearchCriteria.article != undefined && $scope.trackSearchCriteria.article != "") {
			jQuery("body").busyWithMessage(language);
			$http.get('/action/' + site_code + '/' + language + '/tracking/item/' + user.userNumber + '/' + $scope.trackSearchCriteria.article).then(function (response) {
                $scope.trackingItems = response.data;
                $scope.searchSubmitted = true;
                $timeout(function () {
                    jQuery("body").endBusy();
                });
            }, handleError);
		}
	};

	$scope.findOrderTrackItems = function () {
		var customerId;
		if (!$scope.trackSearchCriteria.customerId) {
			customerId = 0;
		} else {
			customerId = $scope.trackSearchCriteria.customerId;
		}
		jQuery("body").busyWithMessage(language);
		$http.get('/action/' + site_code + '/' + language + '/tracking/order/' + customerId).then(function (response) {
			$scope.error = undefined;
			$scope.trackingItems = _.groupBy(response.data, 'salesOrder');
			$scope.searchSubmitted = true;
			$timeout(function () {
				jQuery("body").endBusy();
			});
		}, handleError);
	};

	function handleError(response) {
		$scope.error = response.data.message;
		$scope.trackingItems = {};
		jQuery("body").endBusy();
	}

	if ($location.path() === '/ordertracking') {
		if (!settingsService.isAgent()) {
			$log.debug("Not an agent, getting items");
			$scope.findOrderTrackItems();
		}
	}

	$scope.getSettingsService = function () {
		return settingsService;
	};

	$scope.getArticleService = function () {
		return articleService;
	};

	$scope.getAlertClass = function (date) {
		if (date == "-") {
			return "alert-default";
		} else {
			var splittedDate = date.split("/");
			date = splittedDate[2] + "-" + splittedDate[1] + "-" + splittedDate[0];
			if (Date.parse(date) < Date.now()) {
				return "alert-success";
			} else {
				return "alert-default";
			}
		}
	};

	$scope.getGlyphiconClass = function (date) {
		if (date == "-") {
			return "glyphicon-remove";
		} else {
			var splittedDate = date.split("/");
			date = splittedDate[2] + "-" + splittedDate[1] + "-" + splittedDate[0];
			if (Date.parse(date) < Date.now()) {
				return "glyphicon-ok";
			} else {
				return "glyphicon-remove";
			}
		}
	};
	
	

}]);

rdsApp.controller('UserFlowController', ['$scope', '$http', 'articleService', 'settingsService', function ($scope, $http, articleService, settingsService) {

	$scope.originalData = [];
	$scope.uniqueContacts = {};
	$scope.uniqueContactsVisible = {};
	$scope.trackingItems = [];

	$scope.searchSubmitted = false;
	$scope.customer = {};
	$scope.searchCriteria = {};
	$scope.model = {};

	// Sorting and filtering attributes
	$scope.sortType = 'date'; // set the default sort type
	$scope.sortReverse = false;  // set the default sort order
	$scope.search = '';


	var d = new Date();
	d.setMonth(d.getMonth() - 1);
	$scope.searchCriteria.from = new Date(d.getFullYear(), d.getMonth(), d.getDate());

	$scope.findUniqueContacts = function () {
		if ($scope.customer.id != undefined) {
			$scope.searchCriteria.customerId = $scope.customer.id;
		}
		$http.post('/action/' + site_code + '/' + language + '/tracking/mailuniquecontact', $scope.searchCriteria)
			.success(function (data) {
				$scope.uniqueContacts.items = data;
			}
		);
	};
	$scope.findUniqueContacts();

	$scope.findTrackItems = function () {
		if ($scope.customer.id != undefined) {
			$scope.searchCriteria.customerId = $scope.customer.id;
		}

		jQuery("body").busyWithOfferMessage(language);

		$http.post('/action/' + site_code + '/' + language + '/tracking/flow', $scope.searchCriteria)
			.success(function (data) {
				$scope.originalData = data;
				$scope.trackingItems = $scope.originalData.splice(0);
				$scope.searchSubmitted = true;

				angular.forEach($scope.trackingItems, function (value, key) {
					var params = [];
					if (value.postData != undefined) {
						params = value.postData.split("&");
					}
					value.query = "";

					for (var i = 0; i < params.length; i++) {
						if (params[i] != ""
							&& params[i].toUpperCase().indexOf("BRAND=") == -1
							&& params[i].toUpperCase().indexOf("CATEGORY=") == -1
							&& params[i].toUpperCase().indexOf("CARTID=") == -1) {
							var data = params[i].split("=");
							if (data[1] != undefined && data[1] != "undefined") {
								value.query += $scope.capitalizeFirstLetter(data[0] + " is " + data[1]);
								if (i + 1 < params.length || params.length > 1) {
									value.query += "<br/>";
								}
							}
						}
					}

					// Parsing queryParams for Download info and High Res images
					if (value.query == "" && value.queryParams.indexOf("?") != -1) {
						params = value.queryParams.split("?");
						if (params.length > 1) {
							value.query += "Reference id is " + params[1].split("=")[1];
						}
					}

					// Parsing queryParams for Download PDF
					if (value.query == "" && value.postData == undefined) {
						params = value.queryParams.split("/");
						if (params.length == 8) {
							value.query += "Article is " + params[6] + "<br/>";
							value.query += "Color is " + params[7];

						}
					}
				});

                document.cookie = "trackingItems=" + JSON.stringify($scope.searchCriteria) + "; path=/; domain=.sprox.com";

				jQuery("body").endBusy();
			}
		);
	};

    $scope.exportTrackItems = function() {
        if ($scope.customer.id != undefined) {
            $scope.searchCriteria.customerId = $scope.customer.id;
        }

        var form = document.getElementById("userFlowCriteria");
        form.setAttribute("method", "POST");
        form.setAttribute("action", '/action/' + site_code + '/' + language + '/tracking/export');
        form.submit();
    };

	$scope.capitalizeFirstLetter = function (string) {
		return string.charAt(0).toUpperCase() + string.slice(1);
	};

	$scope.expand = function (trackItem, expand) {
		$scope.uniqueContactsVisible[trackItem.campaign + "-" + trackItem.customerNumber] = expand;
	};

	$scope.isExpanded = function (trackItem) {
		return $scope.uniqueContactsVisible[trackItem.campaign + "-" + trackItem.customerNumber];
	};

	$scope.showTrackItem = function (trackItem, first) {
		if (first) {
			return first;
		} else {
			return $scope.uniqueContactsVisible[trackItem.campaign + "-" + trackItem.customerNumber];
		}
	};

	$scope.sortByTimestamp = function (trackingItem) {
		var date = new Date(trackingItem.timestamp);
		var dateAndTime = trackingItem.timestamp.split(" ");
		var splittedDate = dateAndTime[0].split("/");
		return splittedDate[2] + "/" + splittedDate[1] + "/" + splittedDate[0] + "T" + dateAndTime[1];
	};

	$scope.openDatePicker = function ($event, elementOpened) {
		$event.preventDefault();
		$event.stopPropagation();
		$scope.model[elementOpened] = true;
	};

}]);
