rdsApp.config(function ($routeProvider, $locationProvider) {
	$routeProvider
		.when('/new', {
			templateUrl: '/content/order/wizard.html',
			controller: 'OrderController',
			controllerAs: 'orderCtrl'
		});
});

rdsApp.controller('OrderController', ['$scope', '$http', '$location', '$compile', 'settingsService', 'cartService', 'orderService', 'profileService', 'printOptionService',
	function ($scope, $http, $location, $compile, settingsService, cartService, orderService, profileService, printOptionService) {
		var oc = this;
		$scope.currentStep = "Start";
		$scope.model = {};
		$scope.model.environmentCode = "E";
		
		$scope.typeCreation='new';
		
		var previousEnvironmentCode = $scope.model.environmentCode;

		$scope.offerInfoValidError = [];

		$scope.finishedWizard = function () {
			$scope.offerInfoValidError = orderService.isOfferInfoValid();
			if ($scope.offerInfoValidError.length == 0) {
				// setting the offer status to created,
				settingsService.settings.offerStatus = 10;
				settingsService.saveSettings();
				printOptionService.savePrintOptionsToStorage();
				window.location = "/" + language + "/catalog#/cart";
				$location.path("/cart");
			}
		};

		$scope.getProfileService = function () {
			return profileService;
		};

		$scope.getSettingsService = function () {
			return settingsService;
		};

		$scope.openFollowUp = function ($event, elementOpened) {
			$event.preventDefault();
			$event.stopPropagation();
			$scope.model[elementOpened] = true;
		};

		$scope.openValidTill = function ($event, elementOpened) {
			$event.preventDefault();
			$event.stopPropagation();
			$scope.model[elementOpened] = true;
		};

		$scope.getConditions = function () {
			profileService.getConditions(settingsService.settings.customer.id, settingsService.settings.customer.environmentCode);
		};
		
		var today = new Date();

		$scope.dateOptions = {
			formatYear: 'yyyy',
			startingDay: 1,
			"min-date": new Date().setMonth(today.getMonth() -1)
		};
		
		$scope.clearCustomerAndContactFields = function () {
			if($scope.model.environmentCode != previousEnvironmentCode) {
				$scope.getSettingsService().settings.customer = {};
				$scope.getSettingsService().contacts = [];
				$scope.getSettingsService().settings.contact = {};
				
				if($scope.model.environmentCode == "E")
					settingsService.settings.priceCode = "E";
				else // $scope.model.environmentCode == "C"
					settingsService.settings.priceCode = "C";
			}
			previousEnvironmentCode = $scope.model.environmentCode;
		};
		
		$scope.boolToString = function(bool) {
			return bool ? 'Yes' : 'No';
		};
		
	}]);
